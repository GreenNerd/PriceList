<div class="col-md-1"></div>
<div class="col-md-10">
  <%= form_for @product, html: { class: "form-horizontal", multipart: true } do |f| %>
    <!-- errors -->
    <div class="form-group">
      <label class="col-sm-2 control-label"></label>
      <div class="col-sm-10">
        <% if @product.errors.any? %>
          <div class="alert alert-danger">
            表单有 <%= pluralize(@product.errors.count, "错误") %>.
          </div>
          <ul class="list-group">
            <% @product.errors.full_messages.each do |msg| %>
              <li class="list-group-item list-group-item-warning"><%= msg %></li>
            <% end %>
          </ul>
        <% end %>
      </div>
    </div>
    <!-- product category -->
    <div class="form-group">
      <label for="cgry-select" class="col-sm-2 control-label">选择分类</label>
      <div class="col-sm-10">
        <%= f.select(:category_id, options_for_select(nested_set_options(Category) {|i| "#{'-' * i.level} #{i.title}"}, @product.category_id), {:multiple => :false }, class: "form-control", id: "cgry-select", style: "width:40%", multiple: false ) %>
      </div>
    </div>

    <!-- product name -->
    <div class="form-group">
      <label for="pro-name" class="col-sm-2 control-label">商品标题</label>
      <div class="col-sm-10">
        <%= f.text_field :name, class: "form-control", id: "pro-name", placeholder: "请输入商品标题" %>
      </div>
    </div>

    <!-- product type -->
    <div class="form-group">
      <label for="pro-type" class="col-sm-2 control-label">商品型号</label>
      <div class="col-sm-10" id="insert-pro-sku">
        <div>
          <span><%= link_to_add_fields "添加型号", f, :stock_keeping_units %></span>
        </div>

        <%= f.fields_for :stock_keeping_units do |sku| %>
          <%= render 'products/stock_keeping_unit_fields', f: sku %>
        <% end %>

      </div>
    </div>

    <!-- product price -->
    <div class="form-group">
      <label for="pro-price" class="col-sm-2 control-label">商品价格</label>
      <div class="col-sm-10">
        <div class="input-group">
          <%= f.text_field :price, type: "text", class: "form-control", placeholder: "请输入商品价格", id: "pro-price" %>
          <span class="input-group-addon">元</span>
        </div>
      </div>
    </div>
    
    <!-- product count -->
    <div class="form-group">
      <label for="pro-price" class="col-sm-2 control-label">商品库存</label>
      <div class="col-sm-10">
        <div class="input-group">
          <%= f.number_field :count, type: "text", class: "form-control", placeholder: "请输入商品库存" %>
          <span class="input-group-addon">件</span>
        </div>
      </div>
    </div>

    <!-- product thumb -->
    <div class="form-group">
      <label for="pro-thumb" class="col-sm-2 control-label">商品缩略图</label>
      <div class="col-sm-10">
        <div class="well" id="upload-thumbs">
          <% if @product.thumb? %>
            <%= f.hidden_field :thumb, value: ',' + @product.thumb.join(',') + ',', id: "pro-thumb-upload" %>
          <% else %>
            <%= f.hidden_field :thumb, value: ',', id: "pro-thumb-upload" %>
          <% end %>
          <% @product.thumb.each do |pic| %>
            <div style="display:inline-block;">
              <%= image_tag qiniu_image_url(pic, :sitesadmin), class: "img-rounded", height: 180, width: 180 %>
              <a class="img-upload-del-pics" name=<%= pic %> ><i class="fa fa-close" aria-hidden="true"></i></a>
            </div>
          <% end %>
        </div>
        <div class="alert-success" id="upload-success" style="display:none;">队列文件处理完毕</div>
        <div class="well" id="upload-container">
          <input type="hidden" id="uptoken-thumbs" value=<%= @uptoken %> >
          <a class="btn btn-success btm-sm" id="pickfiles" style="width: 100px;" href="#">
            <i class="fa fa-plus" aria-hidden="true"></i>
            <span>选择文件</span>
          </a>
          <a class="btn btn-primary btn-sm" id="up_load" style="width: 100px" href="#">
            <i class="fa fa-check" aria-hidden="true"></i>
            <span>确认上传</span>
          </a>
          <a class="btn btn-danger btn-sm" id="stop_load" style="width: 100px" href="#">
            <i class="fa fa-close" aria-hidden="true"></i>
            <span>暂停上传</span>
          </a>
        </div>
      </div>
    </div>

    <!-- product description -->
    <div class="form-group">
      <label for="pro-description" class="col-sm-2 control-label">商品描述</label>
      <div class="col-sm-10">
        <%= f.text_area :description, class: "form-control", id: "detail-editor", placeholder: "" %>
      </div>
    </div>

    <!-- product dimensions -->
    <div class="form-group">
      <label for="pro-description" class="col-sm-2 control-label">商品规格</label>
      <div class="col-sm-10">
        <div>
          <span><%= link_to_add_fields "添加规格", f, :dimensions %></span>
        </div>
        <%= f.fields_for :dimensions do |disn| %>
          <%= render 'products/dimension_fields', f: disn %>
        <% end %>
      </div>
    </div>

    <!-- product pictures -->
    <div class="form-group">
      <label for="pro-pics" class="col-sm-2 control-label">商品图片</label>
      <div class="col-sm-10">
        <div class="well" id="upload-pics">
          <% if @product.pictures? %>
            <%= f.hidden_field :pictures, value: ',' + @product.pictures.join(',') + ',', id: "pro-pics-upload" %>
          <% else %>
            <%= f.hidden_field :pictures, value: ',', id: "pro-pics-upload" %>
          <% end %>
          <% @product.pictures.each do |pic| %>
            <div style="display:inline-block;">
              <%= image_tag qiniu_image_url(pic, :sitesadmin), class: "img-rounded", height: 180, width: 180 %>
              <a class="img-upload-del-pics" name=<%= pic %> ><i class="fa fa-close" aria-hidden="true"></i></a>
            </div>
          <% end %>
        </div>
        <div class="alert-danger" id="upload-success-pics" style="display:none;">队列文件处理完毕</div>
        <div class="well" id="upload-container-pics">
          <input type="hidden" id="uptoken-pics" value=<%= @uptokenpics %> >
          <a class="btn btn-success btm-sm" id="pickpics" style="width: 100px;" href="#">
            <i class="fa fa-plus" aria-hidden="true"></i>
            <span>选择文件</span>
          </a>
          <a class="btn btn-primary btn-sm" id="up_load_pics" style="width: 100px" href="#">
            <i class="fa fa-check" aria-hidden="true"></i>
            <span>确认上传</span>
          </a>
          <a class="btn btn-danger btn-sm" id="stop_load_pics" style="width: 100px" href="#">
            <i class="fa fa-close" aria-hidden="true"></i>
            <span>暂停上传</span>
          </a>
        </div>
      </div>
    </div>

    <div style="padding-bottom:100px; padding-top:80px;">
      <%= f.submit "保存", class:"btn btn-info btn-sm", style: "float:right;" %>
    </div>

<% end %>
</div>
<div class="col-md-1"></div>

<script>
editor = new Simditor({
  textarea: $('#detail-editor'),
  toolbar: [
      'title','bold','italic','underline','strikethrough','color','|',
      'ol','ul','blockquote','code','table','link','image','hr','|',
      'indent','outdent'
    ],
  pasteImage: true,
  defaultImage: '<%= image_path "upload-loading.png" %>'
});

//引入Plupload 、qiniu.js后
var uploader = Qiniu.uploader({
    runtimes: 'html5,flash,html4',    //上传模式,依次退化
    browse_button: 'pickfiles',       //上传选择的点选按钮，**必需**
    // uptoken_url: '/token',            //Ajax请求upToken的Url，**强烈建议设置**（服务端提供）
    // uptoken : '', //若未指定uptoken_url,则必须指定 uptoken ,uptoken由其他程序生成
    uptoken : $('#uptoken-thumbs').val(), //若未指定uptoken_url,则必须指定 uptoken ,uptoken由其他程序生成
    unique_names: true, // 默认 false，key为文件名。若开启该选项，SDK为自动生成上传成功后的key（文件名）。
    // save_key: true,   // 默认 false。若在服务端生成uptoken的上传策略中指定了 `sava_key`，则开启，SDK会忽略对key的处理
    // domain: 'http://qiniu-plupload.qiniudn.com/',   //bucket 域名，下载资源时用到，**必需**
    domain: 'ogf4uc3pg.bkt.clouddn.com',   //bucket 域名，下载资源时用到，**必需**
    get_new_uptoken: false,  //设置上传文件的时候是否每次都重新获取新的token
    container: 'upload-container',           //上传区域DOM ID，默认是browser_button的父元素，
    max_file_size: '100mb',           //最大文件体积限制
    // flash_swf_url: 'js/plupload/Moxie.swf',  //引入flash,相对路径
    flash_swf_url: '<%= asset_path "Moxie.swf" %>',  //引入flash,相对路径
    max_retries: 3,                   //上传失败最大重试次数
    dragdrop: true,                   //开启可拖曳上传
    drop_element: 'upload-container',        //拖曳上传区域元素的ID，拖曳文件或文件夹后可触发上传
    chunk_size: '4mb',                //分块上传时，每片的体积
    // auto_start: true,                 //选择文件后自动上传，若关闭需要自己绑定事件触发上传
    init: {
        'FilesAdded': function(up, files) {
                // 文件添加进队列后,处理相关的事情
              for (var i=0; i < files.length; i++) {
                showPreview(up, files[i], '#upload-thumbs');
              }
        },
        'BeforeUpload': function(up, file) {
               // 每个文件上传前,处理相关的事情
        },
        'UploadProgress': function(up, file) {
               // 每个文件上传时,处理相关的事情
        },
        'FileUploaded': function(up, file, info) {
               // 每个文件上传成功后,处理相关的事情
               // 其中 info 是文件上传成功后，服务端返回的json，形式如
               // {
               //    "hash": "Fh8xVqod2MQ1mocfI4S4KpRL6D98",
               //    "key": "gogopher.jpg"
               //  }
               // 参考http://developer.qiniu.com/docs/v6/api/overview/up/response/simple-response.html

               // var domain = up.getOption('domain');
               // var res = parseJSON(info);
               // var sourceLink = domain + res.key; 获取上传成功后的文件的Url
               var domain = up.getOption('domain');
               var res = $.parseJSON(info);
               var sourceLink = domain + res.key; // 获取上传成功后的文件的Url
               console.log(info);
               console.log(sourceLink);
          val = $('#pro-thumb-upload').val();
          $('#pro-thumb-upload').val(val + res.key + ',');
          // var array = $.parseJSON("[" + val + "]");
          // array.push(res.key);
          // $('#pro-thumb-upload').val(array.toString());
        },
        'Error': function(up, err, errTip) {
               //上传出错时,处理相关的事情
        },
        'UploadComplete': function() {
               //队列文件处理完毕后,处理相关的事情
               $('#upload-success').show();
        },
        'Key': function(up, file) {
            // 若想在前端对每个文件的key进行个性化处理，可以配置该函数
            // 该配置必须要在 unique_names: false , save_key: false 时才生效

            var key = "";
            // do something with key here
            return key
        }
    }
});

// domain 为七牛空间（bucket)对应的域名，选择某个空间后，可通过"空间设置->基本设置->域名设置"查看获取

// uploader 为一个plupload对象，继承了所有plupload的方法，参考http://plupload.com/docs
$('#up_load').on('click', function(){
  uploader.start();
});
$('#stop_load').on('click', function(){
  uploader.stop();
});

function showPreview(uploader, file, container) {
  var item = $('<div></div>').prependTo(container);
  $(item).attr('style', 'display:inline-block;');
  var image = new Image();
  $(image).attr('class', 'img-rounded');
  $(image).attr('height', '180');
  $(image).attr('width', '180');
  $(image).appendTo(item);
  // Add delete button
  var dbtn = $('<a><i class="fa fa-close" aria-hidden="true"></i></a>');
  $(dbtn).appendTo(item);
  $(dbtn).on('click', function(){
    uploader.removeFile(file);
    $(item).hide();
    val = $.parseJSON($(container + " input").val());
    alert("test");
    val.pop(file.name)
    $('#pro-thumb-upload').val(JSON.stringify(val));
  });
  // $(image).appendTo($("#upload-thumbs"));
  var preloader = new mOxie.Image();
  preloader.onload = function() {
    preloader.downsize(300, 300);
    image.setAttribute('src', preloader.getAsDataURL());
  }
  preloader.load(file.getSource());
}

//引入Plupload 、qiniu.js后
var uploaderpics = Qiniu.uploader({
    runtimes: 'html5,flash,html4',    //上传模式,依次退化
    browse_button: 'pickpics',       //上传选择的点选按钮，**必需**
    // uptoken_url: '/token',            //Ajax请求upToken的Url，**强烈建议设置**（服务端提供）
    // uptoken : '', //若未指定uptoken_url,则必须指定 uptoken ,uptoken由其他程序生成
    uptoken : $('#uptoken-pics').val(), //若未指定uptoken_url,则必须指定 uptoken ,uptoken由其他程序生成
    unique_names: true, // 默认 false，key为文件名。若开启该选项，SDK为自动生成上传成功后的key（文件名）。
    // save_key: true,   // 默认 false。若在服务端生成uptoken的上传策略中指定了 `sava_key`，则开启，SDK会忽略对key的处理
    // domain: 'http://qiniu-plupload.qiniudn.com/',   //bucket 域名，下载资源时用到，**必需**
    domain: 'ogf4uc3pg.bkt.clouddn.com',   //bucket 域名，下载资源时用到，**必需**
    get_new_uptoken: false,  //设置上传文件的时候是否每次都重新获取新的token
    container: 'upload-container-pics',           //上传区域DOM ID，默认是browser_button的父元素，
    max_file_size: '100mb',           //最大文件体积限制
    // flash_swf_url: 'js/plupload/Moxie.swf',  //引入flash,相对路径
    flash_swf_url: '<%= asset_path "Moxie.swf" %>',  //引入flash,相对路径
    max_retries: 3,                   //上传失败最大重试次数
    dragdrop: true,                   //开启可拖曳上传
    drop_element: 'upload-container-pics',        //拖曳上传区域元素的ID，拖曳文件或文件夹后可触发上传
    chunk_size: '4mb',                //分块上传时，每片的体积
    // auto_start: true,                 //选择文件后自动上传，若关闭需要自己绑定事件触发上传
    multi_selection: true,
    init: {
        'FilesAdded': function(up, files) {
                // 文件添加进队列后,处理相关的事情
              for (var i=0; i < files.length; i++) {
                showPreview(up, files[i], '#upload-pics');
              }
        },
        'BeforeUpload': function(up, file) {
               // 每个文件上传前,处理相关的事情
        },
        'UploadProgress': function(up, file) {
               // 每个文件上传时,处理相关的事情
        },
        'FileUploaded': function(up, file, info) {
               // 每个文件上传成功后,处理相关的事情
               // 其中 info 是文件上传成功后，服务端返回的json，形式如
               // {
               //    "hash": "Fh8xVqod2MQ1mocfI4S4KpRL6D98",
               //    "key": "gogopher.jpg"
               //  }
               // 参考http://developer.qiniu.com/docs/v6/api/overview/up/response/simple-response.html

               // var domain = up.getOption('domain');
               // var res = parseJSON(info);
               // var sourceLink = domain + res.key; 获取上传成功后的文件的Url
               var domain = up.getOption('domain');
               var res = $.parseJSON(info);
               var sourceLink = domain + res.key; // 获取上传成功后的文件的Url
               console.log(info);
               console.log(sourceLink);
          val = $('#pro-pics-upload').val();
          $('#pro-pics-upload').val(val + res.key + ',');
          // var array = $.parseJSON("[" + val + "]");
          // array.push(res.key);
          // $('#pro-thumb-upload').val(array.toString());
        },
        'Error': function(up, err, errTip) {
               //上传出错时,处理相关的事情
        },
        'UploadComplete': function() {
               //队列文件处理完毕后,处理相关的事情
               $('#upload-success-pics').show();
        },
        'Key': function(up, file) {
            // 若想在前端对每个文件的key进行个性化处理，可以配置该函数
            // 该配置必须要在 unique_names: false , save_key: false 时才生效

            var key = "";
            // do something with key here
            return key
        }
    }
});

// domain 为七牛空间（bucket)对应的域名，选择某个空间后，可通过"空间设置->基本设置->域名设置"查看获取

// uploader 为一个plupload对象，继承了所有plupload的方法，参考http://plupload.com/docs
$('#up_load_pics').on('click', function(){
  uploaderpics.start();
});
$('#stop_load_pics').on('click', function(){
  uploaderpics.stop();
});

// Remove pictures while upload
$("#upload-pics a.img-upload-del-pics").on('click', function(){
  val = $("#pro-pics-upload").val();
  rmv = $(this).attr("name") + ',';
  $("#pro-pics-upload").val(val.replace(rmv, ''));
  $(this).parent("div").hide();
});

$("#upload-thumbs a.img-upload-del-pics").on('click', function(){
  val = $("#pro-thumb-upload").val();
  rmv = $(this).attr("name") + ',';
  $("#pro-thumb-upload").val(val.replace(rmv, ''));
  $(this).parent("div").hide();
});

</script>
